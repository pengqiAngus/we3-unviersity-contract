/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  YiDengToken,
  YiDengTokenInterface,
} from "../../contracts/YiDengToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "teamWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "marketingWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "communityWallet",
        type: "address",
      },
    ],
    name: "InitialDistributionCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "TokensSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKENS_PER_ETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyWithETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "communityAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "teamWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketingWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "communityWallet",
        type: "address",
      },
    ],
    name: "distributeInitialTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialDistributionDone",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketingAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingMintableSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "sellTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teamAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600c81526020016b2cb4a232b733902a37b5b2b760a11b81525060405180604001604052806002815260200161165160f21b815250816003908161006091906101d7565b50600461006d82826101d7565b5050506100866100816100e260201b60201c565b6100e6565b6064610096621312d06014610295565b6100a091906102c0565b60065560646100b3621312d0600a610295565b6100bd91906102c0565b60075560646100d0621312d0600a610295565b6100da91906102c0565b6008556102e2565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061016257607f821691505b60208210810361018257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101d257806000526020600020601f840160051c810160208510156101af5750805b601f840160051c820191505b818110156101cf57600081556001016101bb565b50505b505050565b81516001600160401b038111156101f0576101f0610138565b610204816101fe845461014e565b84610188565b6020601f82116001811461023857600083156102205750848201515b600019600385901b1c1916600184901b1784556101cf565b600084815260208120601f198516915b828110156102685787850151825560209485019460019092019101610248565b50848210156102865786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b80820281158282048414176102ba57634e487b7160e01b600052601160045260246000fd5b92915050565b6000826102dd57634e487b7160e01b600052601260045260246000fd5b500490565b6112ef806102f16000396000f3fe60806040526004361061015a5760003560e01c80636c11bcd3116100c8578063a9059cbb11610084578063dd62ed3e11610061578063dd62ed3e146103c0578063e086e5ec146103e0578063e492c5a9146103f5578063f2fde38b1461041557005b8063a9059cbb14610374578063bc6e660414610394578063d53b4ab4146103aa57005b80636c11bcd3146102ac57806370a08231146102cc578063715018a6146103025780638da5cb5b1461031757806395d89b411461033f578063a457c2d71461035457005b806323b872dd1161011757806323b872dd1461020e578063313ce5671461022e57806332cb6b0c1461024a578063349f0b901461026157806339509351146102765780636816521a1461029657005b80630535ec771461015c57806306fdde031461018b578063095ea7b3146101ad578063150d283d146101cd57806315f0c220146101d557806318160ddd146101f9575b005b34801561016857600080fd5b506009546101769060ff1681565b60405190151581526020015b60405180910390f35b34801561019757600080fd5b506101a0610435565b6040516101829190611088565b3480156101b957600080fd5b506101766101c83660046110f2565b6104c7565b61015a6104e1565b3480156101e157600080fd5b506101eb60075481565b604051908152602001610182565b34801561020557600080fd5b506002546101eb565b34801561021a57600080fd5b5061017661022936600461111c565b6105f7565b34801561023a57600080fd5b5060405160008152602001610182565b34801561025657600080fd5b506101eb621312d081565b34801561026d57600080fd5b506101eb61061b565b34801561028257600080fd5b506101766102913660046110f2565b610638565b3480156102a257600080fd5b506101eb60065481565b3480156102b857600080fd5b5061015a6102c7366004611159565b61065a565b3480156102d857600080fd5b506101eb6102e7366004611172565b6001600160a01b031660009081526020819052604090205490565b34801561030e57600080fd5b5061015a610838565b34801561032357600080fd5b506005546040516001600160a01b039091168152602001610182565b34801561034b57600080fd5b506101a061084c565b34801561036057600080fd5b5061017661036f3660046110f2565b61085b565b34801561038057600080fd5b5061017661038f3660046110f2565b6108d6565b3480156103a057600080fd5b506101eb6103e881565b3480156103b657600080fd5b506101eb60085481565b3480156103cc57600080fd5b506101eb6103db366004611194565b6108e4565b3480156103ec57600080fd5b5061015a61090f565b34801561040157600080fd5b5061015a6104103660046111c7565b610953565b34801561042157600080fd5b5061015a610430366004611172565b610a3a565b6060600380546104449061120a565b80601f01602080910402602001604051908101604052809291908181526020018280546104709061120a565b80156104bd5780601f10610492576101008083540402835291602001916104bd565b820191906000526020600020905b8154815290600101906020018083116104a057829003601f168201915b5050505050905090565b6000336104d5818585610ab0565b60019150505b92915050565b600034116105265760405162461bcd60e51b815260206004820152600d60248201526c09aeae6e840e6cadcc8408aa89609b1b60448201526064015b60405180910390fd5b6000670de0b6b3a764000061053d6103e83461125a565b6105479190611271565b9050621312d08161055760025490565b6105619190611293565b11156105af5760405162461bcd60e51b815260206004820152601760248201527f576f756c6420657863656564206d617820737570706c79000000000000000000604482015260640161051d565b6105b93382610bd5565b604080513481526020810183905233917f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33910160405180910390a250565b600033610605858285610c94565b610610858585610d0e565b506001949350505050565b600061062660025490565b61063390621312d06112a6565b905090565b6000336104d581858561064b83836108e4565b6106559190611293565b610ab0565b600081116106aa5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161051d565b336000908152602081905260409020548111156107005760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161051d565b600061070e6103e883611271565b9050804710156107605760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742045544820696e20636f6e747261637400000000604482015260640161051d565b61076a3383610eb2565b604051600090339083908381818185875af1925050503d80600081146107ac576040519150601f19603f3d011682016040523d82523d6000602084013e6107b1565b606091505b50509050806107f85760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b604482015260640161051d565b604080518481526020810184905233917f2dcf9433d75db0d8b1c172641f85e319ffe4ad22e108a95d1847ceb906e5195d910160405180910390a2505050565b610840610fdc565b61084a6000611036565b565b6060600480546104449061120a565b6000338161086982866108e4565b9050838110156108c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161051d565b6106108286868403610ab0565b6000336104d5818585610d0e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610917610fdc565b6005546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610950573d6000803e3d6000fd5b50565b61095b610fdc565b60095460ff16156109b85760405162461bcd60e51b815260206004820152602160248201527f496e697469616c20646973747269627574696f6e20616c726561647920646f6e6044820152606560f81b606482015260840161051d565b6109c483600654610bd5565b6109d082600754610bd5565b6109dc81600854610bd5565b6009805460ff19166001179055604080516001600160a01b038581168252848116602083015283168183015290517f4864f7df2cd1c07972b3dbf1a98de81ddd7d784caf0078d5e5e372b219f6695c916060908290030190a1505050565b610a42610fdc565b6001600160a01b038116610aa75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161051d565b61095081611036565b6001600160a01b038316610b125760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161051d565b6001600160a01b038216610b735760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161051d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610c2b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161051d565b8060026000828254610c3d9190611293565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610ca084846108e4565b90506000198114610d085781811015610cfb5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161051d565b610d088484848403610ab0565b50505050565b6001600160a01b038316610d725760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161051d565b6001600160a01b038216610dd45760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161051d565b6001600160a01b03831660009081526020819052604090205481811015610e4c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161051d565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610d08565b6001600160a01b038216610f125760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161051d565b6001600160a01b03821660009081526020819052604090205481811015610f865760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161051d565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610bc8565b6005546001600160a01b0316331461084a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051d565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b602081526000825180602084015260005b818110156110b65760208186018101516040868401015201611099565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146110ed57600080fd5b919050565b6000806040838503121561110557600080fd5b61110e836110d6565b946020939093013593505050565b60008060006060848603121561113157600080fd5b61113a846110d6565b9250611148602085016110d6565b929592945050506040919091013590565b60006020828403121561116b57600080fd5b5035919050565b60006020828403121561118457600080fd5b61118d826110d6565b9392505050565b600080604083850312156111a757600080fd5b6111b0836110d6565b91506111be602084016110d6565b90509250929050565b6000806000606084860312156111dc57600080fd5b6111e5846110d6565b92506111f3602085016110d6565b9150611201604085016110d6565b90509250925092565b600181811c9082168061121e57607f821691505b60208210810361123e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176104db576104db611244565b60008261128e57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156104db576104db611244565b818103818111156104db576104db61124456fea26469706673582212209e140c3593fc9530776bc12e7a822292235dfd195b2f004957d6cea5f61710e964736f6c634300081c0033";

type YiDengTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YiDengTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YiDengToken__factory extends ContractFactory {
  constructor(...args: YiDengTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<YiDengToken> {
    return super.deploy(overrides || {}) as Promise<YiDengToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): YiDengToken {
    return super.attach(address) as YiDengToken;
  }
  override connect(signer: Signer): YiDengToken__factory {
    return super.connect(signer) as YiDengToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YiDengTokenInterface {
    return new utils.Interface(_abi) as YiDengTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YiDengToken {
    return new Contract(address, _abi, signerOrProvider) as YiDengToken;
  }
}
